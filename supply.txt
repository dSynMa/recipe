channels: none
agent-names: one, two, three
enum myEnum { foo, bar, baz }

message-structure: MSG : location
communication-variables: c : myEnum

agent Client
    local: q : myEnum, x : location
    init: x == myself
    relabel: c <- q
    receive-guard: (channel == *)

    repeat: (
            splyAtSelf: <TRUE> SUPPLY@SELF()[]
            +
            getAtX: <TRUE> GET@x[]
            +
            bcastSend: <TRUE> *! TRUE(MSG := myself)[x := myself]
            + 
            bcastRecv:  <TRUE> *? [x := MSG]
            )

system = Client(one,TRUE) | Client(two,TRUE) | Client(three, TRUE)


SPEC G F <p2p> TRUE
SPEC G F <exists(c=foo)> TRUE
SPEC G F <supplier-c=foo> TRUE
SPEC G F <getter == three> TRUE
SPEC G F <initiator == three> TRUE
SPEC G F <supplier == one> TRUE
SPEC G F <producer == one> TRUE

# initiator = either getter or sender (who initiates the transition)
# producer = either supplier or sender (where message originates from)
# supplier-x = variable x of supplying agent